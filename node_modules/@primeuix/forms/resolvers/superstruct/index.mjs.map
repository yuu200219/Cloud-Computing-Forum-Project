{"version":3,"sources":["../../../src/resolvers/superstruct/index.ts"],"sourcesContent":["import { toValues } from '@primeuix/forms/utils';\nimport { isNotEmpty } from '@primeuix/utils/object';\nimport type { Struct } from 'superstruct';\nimport type { ResolverOptions, ResolverResult } from '..';\n\nexport const superStructResolver =\n    <T>(schema: Struct<T>, schemaOptions?: any, resolverOptions?: ResolverOptions) =>\n    async ({ values, name }: any): Promise<ResolverResult<T>> => {\n        const { raw = false } = resolverOptions || {};\n\n        try {\n            const [errors, data] = schema.validate(values, schemaOptions);\n\n            if (errors) {\n                return {\n                    values: toValues(undefined, name),\n                    errors: errors.failures().reduce((acc: Record<string, any[]>, error: any) => {\n                        const pathKey = isNotEmpty(error.path) ? error.path[0] : name;\n\n                        if (pathKey) {\n                            acc[pathKey] ||= [];\n                            acc[pathKey].push(error);\n                        }\n\n                        return acc;\n                    }, {})\n                };\n            }\n\n            return {\n                values: toValues(raw ? values : data, name),\n                errors: {}\n            };\n        } catch (e: any) {\n            throw e;\n        }\n    };\n"],"mappings":";AAAA,SAAS,gBAAgB;AACzB,SAAS,kBAAkB;AAIpB,IAAM,sBACT,CAAI,QAAmB,eAAqB,oBAC5C,OAAO,EAAE,QAAQ,KAAK,MAAuC;AACzD,QAAM,EAAE,MAAM,MAAM,IAAI,mBAAmB,CAAC;AAE5C,MAAI;AACA,UAAM,CAAC,QAAQ,IAAI,IAAI,OAAO,SAAS,QAAQ,aAAa;AAE5D,QAAI,QAAQ;AACR,aAAO;AAAA,QACH,QAAQ,SAAS,QAAW,IAAI;AAAA,QAChC,QAAQ,OAAO,SAAS,EAAE,OAAO,CAAC,KAA4B,UAAe;AACzE,gBAAM,UAAU,WAAW,MAAM,IAAI,IAAI,MAAM,KAAK,CAAC,IAAI;AAEzD,cAAI,SAAS;AACT,gBAAI,OAAO,MAAM,CAAC;AAClB,gBAAI,OAAO,EAAE,KAAK,KAAK;AAAA,UAC3B;AAEA,iBAAO;AAAA,QACX,GAAG,CAAC,CAAC;AAAA,MACT;AAAA,IACJ;AAEA,WAAO;AAAA,MACH,QAAQ,SAAS,MAAM,SAAS,MAAM,IAAI;AAAA,MAC1C,QAAQ,CAAC;AAAA,IACb;AAAA,EACJ,SAAS,GAAQ;AACb,UAAM;AAAA,EACV;AACJ;","names":[]}