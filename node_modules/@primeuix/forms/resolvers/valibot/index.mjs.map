{"version":3,"sources":["../../../src/resolvers/valibot/index.ts"],"sourcesContent":["import { toValues } from '@primeuix/forms/utils';\nimport { isNotEmpty } from '@primeuix/utils/object';\nimport { getDotPath, InferOutput, safeParse, safeParseAsync } from 'valibot';\nimport type { ResolverOptions, ResolverResult } from '..';\n\nexport const valibotResolver =\n    <T>(schema: any, schemaOptions?: any, resolverOptions?: ResolverOptions) =>\n    async ({ values, name }: any): Promise<ResolverResult<T>> => {\n        const { sync = false, raw = false } = resolverOptions || {};\n\n        try {\n            const result: InferOutput<any> | Promise<InferOutput<any>> = sync ? safeParse(schema, values, { abortPipeEarly: false, ...schemaOptions }) : await safeParseAsync(schema, values, { abortPipeEarly: false, ...schemaOptions });\n\n            if (result.success) {\n                return {\n                    values: toValues(raw ? values : result.output, name),\n                    errors: {}\n                };\n            } else {\n                return {\n                    values: toValues(raw ? values : undefined, name),\n                    errors: result.issues?.reduce((acc: Record<string, any[]>, error: any) => {\n                        const path = getDotPath(error);\n                        const pathKey = isNotEmpty(path) ? path!.split('.')[0] : name;\n\n                        if (pathKey) {\n                            acc[pathKey] ||= [];\n                            acc[pathKey].push(error);\n                        }\n\n                        return acc;\n                    }, {})\n                };\n            }\n        } catch (e: any) {\n            throw e;\n        }\n    };\n"],"mappings":";AAAA,SAAS,gBAAgB;AACzB,SAAS,kBAAkB;AAC3B,SAAS,YAAyB,WAAW,sBAAsB;AAG5D,IAAM,kBACT,CAAI,QAAa,eAAqB,oBACtC,OAAO,EAAE,QAAQ,KAAK,MAAuC;AACzD,QAAM,EAAE,OAAO,OAAO,MAAM,MAAM,IAAI,mBAAmB,CAAC;AAE1D,MAAI;AACA,UAAM,SAAuD,OAAO,UAAU,QAAQ,QAAQ,EAAE,gBAAgB,OAAO,GAAG,cAAc,CAAC,IAAI,MAAM,eAAe,QAAQ,QAAQ,EAAE,gBAAgB,OAAO,GAAG,cAAc,CAAC;AAE7N,QAAI,OAAO,SAAS;AAChB,aAAO;AAAA,QACH,QAAQ,SAAS,MAAM,SAAS,OAAO,QAAQ,IAAI;AAAA,QACnD,QAAQ,CAAC;AAAA,MACb;AAAA,IACJ,OAAO;AACH,aAAO;AAAA,QACH,QAAQ,SAAS,MAAM,SAAS,QAAW,IAAI;AAAA,QAC/C,QAAQ,OAAO,QAAQ,OAAO,CAAC,KAA4B,UAAe;AACtE,gBAAM,OAAO,WAAW,KAAK;AAC7B,gBAAM,UAAU,WAAW,IAAI,IAAI,KAAM,MAAM,GAAG,EAAE,CAAC,IAAI;AAEzD,cAAI,SAAS;AACT,gBAAI,OAAO,MAAM,CAAC;AAClB,gBAAI,OAAO,EAAE,KAAK,KAAK;AAAA,UAC3B;AAEA,iBAAO;AAAA,QACX,GAAG,CAAC,CAAC;AAAA,MACT;AAAA,IACJ;AAAA,EACJ,SAAS,GAAQ;AACb,UAAM;AAAA,EACV;AACJ;","names":[]}